{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","visibleGoods","goods","ALPHABET","sort","a","b","localeCompare","LENGTH","length","reverse","getReorderedGoods","isHidden","className","type","onClick","prevState","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAkCE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAkB,GAAtD,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAAmBH,EAASM,MAA5D,mBAAOC,EAAP,KAAiBC,EAAjB,KAqBMC,EA9CD,SACLC,EADK,GAGJ,IADCH,EACF,EADEA,SAAUH,EACZ,EADYA,WAENK,EAAY,YAAOC,GAgBzB,OAdIH,IAAaP,EAASW,UACxBF,EAAaG,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,cAAcD,MAG3CP,IAAaP,EAASgB,QACxBP,EAAaG,MAAK,SAACC,EAAGC,GACpB,OAAOD,EAAEI,OAASH,EAAEG,UAIpBb,GACFK,EAAaS,UAGRT,EA0BcU,CAAkBlB,EACrC,CAAEM,WAAUH,eACRgB,EAAWb,IAAaP,EAASM,OAASF,EAEhD,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBd,IAAaP,EAASW,SAAW,GAAK,YACnEY,QA7BmB,WACzBf,EAAYR,EAASW,UACrBN,GAAc,IAwBV,iCAQA,wBACEiB,KAAK,SACLD,UAAS,4BAAuBd,IAAaP,EAASgB,OAAS,GAAK,YACpEO,QA3Ba,WACnBf,EAAYR,EAASgB,QACrBX,GAAc,IAsBV,4BAQA,wBACEiB,KAAK,SACLD,UAAS,4BAAuBjB,EAAa,GAAK,YAClDmB,QA9Ba,WACnBlB,GAAc,SAACmB,GAAD,OAAgBA,MA0B1B,qBAQA,wBACEF,KAAK,SACLD,UAAS,2BAAsBD,EAAW,sBAAwB,YAClEG,QAhDM,WACZf,EAAYR,EAASM,MACrBD,GAAc,IA2CV,sBASF,6BACGI,EAAagB,KAAI,SAACC,GAAD,OAChB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YCjHnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.881a6b8c.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods.sort((a, b) => (a.localeCompare(b)));\n  }\n\n  if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((a, b) => {\n      return a.length - b.length;\n    });\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState<boolean>(false);\n  const [sortType, setSortType] = useState<SortType>(SortType.NONE);\n\n  const sortAlphabetically = () => {\n    setSortType(SortType.ALPHABET);\n    setIsReversed(false);\n  };\n\n  const reset = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n    setIsReversed(false);\n  };\n\n  const reverseGoods = () => {\n    setIsReversed((prevState) => !prevState);\n  };\n\n  const visibleGoods = getReorderedGoods(goodsFromServer,\n    { sortType, isReversed });\n  const isHidden = sortType === SortType.NONE && !isReversed;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortType === SortType.ALPHABET ? '' : 'is-light'}`}\n          onClick={sortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortType === SortType.LENGTH ? '' : 'is-light'}`}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${isReversed ? '' : 'is-light'}`}\n          onClick={reverseGoods}\n        >\n          Reverse\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-danger ${isHidden ? 'hidden-reset-button' : 'is-light'}`}\n          onClick={reset}\n        >\n          Reset\n        </button>\n      </div>\n\n      <ul>\n        {visibleGoods.map((good: string) => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}